---
kind: pipeline
type: kubernetes
name: linter

platform:
  os: linux
  arch: amd64

steps:
- name: markdown lint
  commands:
  - markdownlint *.md
  image: git.cryptic.systems/volker.raschek/markdownlint:0.33.0
  resources:
    limits:
      cpu: 150
      memory: 150M

- name: email-notification
  environment:
    PLUGIN_HOST:
      from_secret: smtp_host
    PLUGIN_USERNAME:
      from_secret: smtp_username
    PLUGIN_PASSWORD:
      from_secret: smtp_password
    PLUGIN_FROM:
      from_secret: smtp_mail_address
  image: git.cryptic.systems/volker.raschek/drone-email:0.1.5
  resources:
    limits:
      cpu: 150
      memory: 150M
  when:
    status:
    - changed
    - failure

trigger:
  event:
    exclude:
    - tag

---
kind: pipeline
type: docker
name: archlinux

platform:
  os: linux
  arch: amd64

steps:
- name: archlinux
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh archlinux latest
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: notify
  image: git.cryptic.systems/volker.raschek/drone-email:0.1.5
  environment:
    PLUGIN_HOST:
      from_secret: smtp_host
    PLUGIN_USERNAME:
      from_secret: smtp_username
    PLUGIN_PASSWORD:
      from_secret: smtp_password
    PLUGIN_FROM:
      from_secret: smtp_mail_address
  when:
    status:
    - changed
    - failure

trigger:
  when:
    branch:
    - master
    event:
    - push
    - cron

volumes:
- name: docker_socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: centos

platform:
  os: linux
  arch: amd64

steps:
- name: centos7
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh centos 7
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: notify
  image: git.cryptic.systems/volker.raschek/drone-email:0.1.5
  environment:
    PLUGIN_HOST:
      from_secret: smtp_host
    PLUGIN_USERNAME:
      from_secret: smtp_username
    PLUGIN_PASSWORD:
      from_secret: smtp_password
    PLUGIN_FROM:
      from_secret: smtp_mail_address
  when:
    status:
    - changed
    - failure

trigger:
  when:
    branch:
    - master
    event:
    - push
    - cron

volumes:
- name: docker_socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: debian

platform:
  os: linux
  arch: amd64

steps:
- name: 8-slim
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh debian 8-slim
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: 9-slim
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh debian 9-slim
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: 10-slim
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh debian 10-slim
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: 11-slim
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh debian 11-slim
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: notify
  image: git.cryptic.systems/volker.raschek/drone-email:0.1.5
  environment:
    PLUGIN_HOST:
      from_secret: smtp_host
    PLUGIN_USERNAME:
      from_secret: smtp_username
    PLUGIN_PASSWORD:
      from_secret: smtp_password
    PLUGIN_FROM:
      from_secret: smtp_mail_address
  when:
    status:
    - changed
    - failure

trigger:
  when:
    branch:
    - master
    event:
    - push
    - cron

volumes:
- name: docker_socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: fedora

platform:
  os: linux
  arch: amd64

steps:
- name: fedora-33
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh fedora 33
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: fedora-34
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh fedora 34
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: notify
  image: git.cryptic.systems/volker.raschek/drone-email:0.1.5
  environment:
    PLUGIN_HOST:
      from_secret: smtp_host
    PLUGIN_USERNAME:
      from_secret: smtp_username
    PLUGIN_PASSWORD:
      from_secret: smtp_password
    PLUGIN_FROM:
      from_secret: smtp_mail_address
  when:
    status:
    - changed
    - failure

trigger:
  when:
    branch:
    - master
    event:
    - push
    - cron

volumes:
- name: docker_socket
  host:
    path: /var/run/docker.sock

---
kind: pipeline
type: docker
name: ubuntu

platform:
  os: linux
  arch: amd64

steps:
- name: ubuntu-16.04
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh ubuntu 16.04
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: ubuntu-18.04
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh ubuntu 18.04
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: ubuntu-20.04
  image: harbor.cryptic.systems/docker/volkerraschek/build-image:latest
  commands:
  - ./build.sh ubuntu 20.04
  environment:
    CONTAINER_IMAGE_REGISTRY_PASSWORD:
      from_secret: container_image_registry_password
  volumes:
  - name: docker_socket
    path: /var/run/docker.sock

- name: notify
  image: git.cryptic.systems/volker.raschek/drone-email:0.1.5
  environment:
    PLUGIN_HOST:
      from_secret: smtp_host
    PLUGIN_USERNAME:
      from_secret: smtp_username
    PLUGIN_PASSWORD:
      from_secret: smtp_password
    PLUGIN_FROM:
      from_secret: smtp_mail_address
  when:
    status:
    - changed
    - failure

trigger:
  when:
    branch:
    - master
    event:
    - push
    - cron

volumes:
- name: docker_socket
  host:
    path: /var/run/docker.sock
